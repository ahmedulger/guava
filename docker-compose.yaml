version: '3'

services:
  #service 1: Eureka-Server Service Information
  eureka-server:
    image: eureka-server:1.0
    container_name: eureka-server
    build:
      context: ./microservices-cloud/eureka-server
      dockerfile: ./docker/Dockerfile
    ports:
      - "8761:8761"
    restart: on-failure
  
  #service 2: Config-Server Service Information
  config-server:
    image: config-server:1.0
    container_name: config-server
    build:
      context: ./microservices-cloud/config-server
      dockerfile: ./docker/Dockerfile
    ports:
      - "8888:8888"
    restart: on-failure
    depends_on:
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: file://Users/ahulger/dev-env/repositories/me/guava-config-repo
      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka
    volumes:
      - /Users/ahulger/dev-env/repositories/me/guava-config-repo/:/Users/ahulger/dev-env/repositories/me/guava-config-repo/

  #service 3: PostgresSQL - Database Information
  postgres-service:
    container_name: postgres-service
    image: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=asd123
    volumes:
      - ./docker-init/postgres-init/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  #service 4: Authentication-Server Service Information
  authentication-server:
    image: authentication-server:1.0
    container_name: authentication-server
    build:
      context: ./microservices-cloud/authentication-server
      dockerfile: ./docker/Dockerfile
    ports:
      - "9090:9090"
    restart: "on-failure"
    depends_on:
      - postgres-service
      - eureka-server
      - config-server
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: asd123
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-service:5432/authentication-server?createDatabaseIfNotExist=true
      spring.config.import: configserver:http://host.docker.internal:8888
      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka
  
  #service 5: ParcelDelivery Service Information
  parcel-delivery-service:
    image: parcel-delivery-service:1.0
    container_name: parcel-delivery-service
    build:
      context: ./parcel-delivery-service
      dockerfile: ./docker/Dockerfile
    ports:
      - "7070:7070"
    restart: "on-failure"
    depends_on:
      - postgres-service
      - eureka-server
      - config-server
    environment:
      SPRING_PROFILES_ACTIVE: default
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: asd123
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-service:5432/parcel-delivery-service?createDatabaseIfNotExist=true
      spring.config.import: configserver:http://host.docker.internal:8888
      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka